version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    ports:
      - "${API_GATEWAY_PORT:-5001}:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
    depends_on:
      - products-service
      - orders-service
      - payments-service
      - notifications-service
      - users-service
      - inventory-service
      - frontend-service

  products-service:
    build:
      context: .
      dockerfile: services/products-service/Dockerfile
    ports:
      - "${PRODUCTS_PORT:-5011}:5011"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5011

  orders-service:
    build:
      context: .
      dockerfile: services/orders-service/Dockerfile
    ports:
      - "${ORDERS_PORT:-5012}:5012"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5012

  payments-service:
    build:
      context: .
      dockerfile: services/payments-service/Dockerfile
    ports:
      - "${PAYMENTS_PORT:-5013}:5013"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5013

  notifications-service:
    build:
      context: .
      dockerfile: services/notifications-service/Dockerfile
    ports:
      - "${NOTIFICATIONS_PORT:-5014}:5014"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5014

  users-service:
    build:
      context: .
      dockerfile: services/users-service/Dockerfile
    ports:
      - "${USERS_PORT:-5015}:5015"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5015

  inventory-service:
    build:
      context: .
      dockerfile: services/inventory-service/Dockerfile
    ports:
      - "${INVENTORY_PORT:-5018}:5018"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5018

  frontend-service:
    build:
      context: .
      dockerfile: services/frontend-service/Dockerfile
    ports:
      - "${FRONTEND_PORT:-5019}:5019"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5019

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  grafana-storage: 
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - services/product-service/*

variables:
  serviceDirectory: 'services/product-service'
  dockerfilePath: '$(serviceDirectory)/Dockerfile'
  containerRegistry: 'democontainerregistry.azurecr.io'
  imageRepository: 'product-service'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'production'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Deploy to AKS
            inputs:
              action: deploy
              manifests: |
                infrastructure/kubernetes/product-service.yaml
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              imagePullSecrets: |
                acr-secret 
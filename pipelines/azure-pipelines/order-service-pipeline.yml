trigger:
  branches:
    include:
    - main
  paths:
    include:
    - services/order-service/*

variables:
  - name: serviceDirectory
    value: 'services/order-service'
  - name: dockerfilePath
    value: '$(serviceDirectory)/Dockerfile'
  - name: containerRegistry
    value: 'democontainerregistry.azurecr.io'
  - name: imageRepository
    value: 'order-service'
  - name: buildTag
    value: '$(Build.BuildId)'
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push
  jobs:
  - job: Build
    displayName: Build and Push Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(containerRegistry)
        tags: |
          $(buildTag)
          latest

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-service-connection'
              namespace: 'default'
              manifests: |
                infrastructure/kubernetes/order-service.yaml
              containers: |
                $(containerRegistry)/$(imageRepository):$(buildTag)
              imagePullSecrets: |
                acr-auth 